- 1. Создать таблицу employees

	create table  employees(
	 id serial primary key,
	 employee_name varchar(50) not null
	 );

	 select* from employees;


	drop table employees;

	insert into employees (employee_name )
	 values ('as1'),
			('as2'),
			('as3'),
			('as4'),
			('as5'),
			('as6'),
			('as7'),
			('as8'),
			('as9'),
			('as10'),
			('as12'),
			('as13'),
			('as14'),
			('as15'),
			('as16'),
			('as17'),
			('as18'),
			('as19'),
			('as20'),
			('as21'),
			('as22'),
			('as23'),
			('as24'),
			('as25'),
			('as26'),
			('as27'),
			('as28'),
			('as29'),
			('as30'),
			('as31'),
			('as32'),
			('as33'),
			('as34'),
			('as35'),
			('as36'),
			('as38'),
			('as39'),
			('as40'),
			('as41'),
			('as42'),
			('as43'),
			('as44'),
			('as45'),
			('as46'),
			('as47'),
			('as48'),
			('as49'),
			('as50'),
			('as51'),
			('as52'),
			('as53'),
			('as54'),
			('as55'),
			('as56'),
			('as57'),
			('as58'),
			('as59'),
			('as60'),
			('as61'),
			('as62'),
			('as63'),
			('as64'),
			('as65'),
			('as66'),
			('as67'),
			('as68'),
			('as69'),
			('as70');
			           


-- 2. Таблица Salary 
create table salary( 
id serial  primary key, 
monthly_salary int not null unique
);

insert  into salary(monthly_salary)
values (1, 1000),
	   (2, 1100),
	   (3, 1200),
	   (4, 1300),
	   (5, 1400),
	   (6, 1500),
	   (7, 1600),
	   (8, 1700),
	   (9, 1800),
	   (10, 1900),
	   (11, 2000),
	   (12, 2100),
	   (13, 2200),
	   (14, 2200),
	   (15, 2300),
	   (16,2400),
	   (17,2500);
	  
select* from salary;
	  
drop table salary;

	  
-- 3.Таблица employee_salary

create table employee_salary(
id serial primary key,
employee_id int not null,
salary_id int not null
   );
  
 
  
select* from  employee_salary;

insert into employee_salary (employee_id, salary_id)
 values (3,7),
	    (1,4), 
	    (5,9),
	    (40,13),
	    (23,4),
	    (11,2),
	    (52,10),
	    (15,13),
	    (26,4),
	    (16,1),
	    (33,7);
	   

	   
   
	  

where employee_id= employee_id;


-- 4. Таблица  roles


select* from roles;

 insert into roles(role_name)
   values   ('Junior_Python_developer'),
		    ('Middle_Python_developer'),
			('Senior_Python_developer'),
			('Junior_Java_developer'),
			('Middle_Java_developer'),
			('Senior_Java_developer');
	
	insert into roles(id, role_name)
values (7, 'Junior_JavaScript_developer'),
(8, 'Middle_JavaScript_developer'),
(9, 'Senior_JavaScript_developer'),
(10, 'Junior_Manual_QA_engineer');

	insert into roles(id, role_name)
values (11, 'Middle_Manual_QA_engineer'),
(12, 'Senior_Manual_QA_engineer'),
(13, 'Project_Manager'),
(14, 'Designer'),
(15, 'HR'),
(16, 'CEO'),
(17, 'Sales_manager'),
(18, 'Junior_Automation_QA_engineer'),
(19, 'Middle_Automation_QA_engineer'),
(20, 'Senior_Automation_QA_engineer');

-- 5.Таблица  roles_employee
	
create table roles_employee(
 id serial  primary key,
 employee_id int  not null,
 role_id int not null,
 foreign key (employee_id)
  	references  employee (id),
 foreign key (role_id)	
 	references roles(id)
 	);

select* from  roles_employee;

drop  table roles_employee; 

insert into roles_employee (employee_id, role_id)
values  (7,2),
	    (20,4), 
	    (3,9),
	    (5,13),
	    (23,4),
	    (11,2),
	    (10,9),
	    (22,13),
	    (21,3),
	    (34,4),
	    (6,7),
	    (3,8),
	    (4,4), 
	    (5,6),
	    (7,14),
	    (21,19),
	    (24,20),
	    (22,17),
	    (15,13),
	    (26,4),
	    (16,1),
	    (33,7);


		   
--1. Вывести всех работников чьи зарплаты есть в базе, вместе с зарплатами.

select salary.id, monthly_salary, roles.role_name, roles.id
from salary join roles
on salary.id= roles.id;
-- еще вариант

  select employee_salary.employee_id, employee.employee_name, salary.monthly_salary
  from employee_salary 
  join salary 
  on  employee_salary.salary_id = salary.id
  join employee
  on employee_salary.employee_id= employee.id;



--2. Вывести всех работников у которых ЗП меньше 2000.
 
select*
from salary
where monthly_salary< 2000;

-- 3. Вывести все зарплатные позиции, но работник по ним не назначен.
-- (ЗП есть, но не понятно кто её получает.)

select  employee_id, monthly_salary, salary_id
from salary left join  employee_salary
on salary_id = employee_salary.salary_id
;


--5. Найти всех работников кому не начислена ЗП.

select salary.id, monthly_salary, employee_salary.employee_id
from salary right join employee_salary
on salary.id= employee_salary.employee_id
;



-- 6. Вывести всех работников с названиями их должности.

select*
from roles;



-- 7. Вывести имена и должность только Java разработчиков.

select*
from roles
where role_name like '_%Java_developer';


select employee.id, employee.employee_name, roles.role_name, roles.id
from employee join roles
on employee.id= roles.id;

-- 8. Вывести имена и должность только Python разработчиков.

select*
from roles
where role_name like '_%Python_developer';

-- 9. Вывести имена и должность всех QA инженеров.

select role_name
from roles
where role_name like '%QA_engineer%' 

-- 10. Вывести имена и должность ручных QA инженеров.

select*
from roles
where role_name like '%Manual_QA_engineer';

-- 11. Вывести имена и должность автоматизаторов QA

select*
from roles
where role_name like '_%Automation_QA_engineer';


-- 12. Вывести имена и зарплаты Junior специалистов

 select  employee_name, role_name, salary_id 
 from employees join roles_employee
 on employees.id= employee_id
 join roles on roles.id= roles_employee.role_id
 join employee_salary on employee_salary.employee_id = roles_employee.employee_id
 where  role_name like '%Jun%'; 


--  Вывести имена и зарплаты  специалистов

select employee.id, employee. employee_name, salary.id,salary.monthly_salary 
from employee left join salary
on employee.id= salary.id;


-- 13. Вывести имена и зарплаты Middle специалистов () 

 select  employee_name, role_name, salary_id 
 from employees join roles_employee
 on employees.id= employee_id
 join roles on roles.id= roles_employee.role_id
 join employee_salary on employee_salary.employee_id = roles_employee.employee_id
 where role_name like 'Middle%';
 

			
-- 14. Вывести имена и зарплаты Senior специалистов

-- 1 вариант

 select roles.role_name,  salary.id, salary.monthly_salary
 from roles  join salary
 on roles.id= salary.id
 where role_name like 'Senior%';

-- 2 вариант

 select  employee_name, role_name, salary_id 
 from employees join roles_employee
 on employees.id= employee_id
 join roles on roles.id= roles_employee.role_id
 join employee_salary on employee_salary.employee_id = roles_employee.employee_id
 where role_name like 'Senior%';




-- 15. Вывести зарплаты Java разработчиков

 select  employee_name, role_name, salary_id 
 from employees join roles_employee
 on employees.id= employee_id
 join roles on roles.id= roles_employee.role_id
 join employee_salary on employee_salary.employee_id = roles_employee.employee_id
 where role_name like '%Java_developer';

   

-- 16. Вывести зарплаты Python разработчиков

select salary.id, roles.role_name,salary.monthly_salary 
from roles join salary 
on roles.id= salary.id
where role_name like '%Python%';
-- 17. Вывести имена и зарплаты Junior Python разработчиков

 select  employee_name, role_name, salary_id 
 from employees full join roles_employee
 on employees.id= employee_id
 join roles on roles.id= roles_employee.role_id
 join employee_salary on employee_salary.employee_id = roles_employee.employee_id
 where role_name like 'Junior_Python%';
-- 18. Вывести имена и зарплаты Middle JS разработчиков

select salary_id, employee_name, role_name
from employees join roles_employee
on employees.id = roles_employee.employee_id
join roles on roles.id = roles_employee.role_id
join employee_salary on employee_salary.employee_id = roles_employee.employee_id
where role_name like 'Middle_JavaScript_developer';

--19. Вывести имена и зарплаты Senior Java разработчиков

select salary_id, employee_name, role_name
from employees join roles_employee
on employees.id = roles_employee.employee_id
join roles on roles.id = roles_employee.role_id
join employee_salary on employee_salary.employee_id = roles_employee.employee_id
where role_name like 'Senior_Java_developer';

-- 20. Вывести зарплаты Junior QA инженеров

select roles.role_name, salary.id, salary.monthly_salary
from roles join salary
on roles.id= salary.id
where role_name like 'Junior_Manual_QA%';

-- 21. Вывести среднюю зарплату всех Junior специалистов

select  avg(monthly_salary)
from employees join roles_employee
on  employees.id = roles_employee.employee_id 
join roles on roles.id= roles_employee.role_id
join employee_salary on employee_salary.employee_id = roles_employee.employee_id
join salary on salary.id = employee_salary.salary_id
group by role_name like '%Junior%_%'; 

-- 22 Вывести сумму зарплат JS разработчиков

select  SUM(monthly_salary)
from employees join roles_employee
on  employees.id = roles_employee.employee_id 
join roles on roles.id= roles_employee.role_id
join employee_salary on employee_salary.employee_id = roles_employee.employee_id
join salary on salary.id = employee_salary.salary_id
group by role_name like '%Java_Script%'; 

-- 23 Вывести минимальную ЗП QA инженеров

select  MIN(monthly_salary)
from employees join roles_employee
on  employees.id = roles_employee.employee_id 
join roles on roles.id= roles_employee.role_id
join employee_salary on employee_salary.employee_id = roles_employee.employee_id
join salary on salary.id = employee_salary.salary_id
group by role_name like '%QA_engineer%'; 

-- 24 Вывести максимальную ЗП QA инженеров

select  MAX(monthly_salary)
from employees join roles_employee
on  employees.id = roles_employee.employee_id 
join roles on roles.id= roles_employee.role_id
join employee_salary on employee_salary.employee_id = roles_employee.employee_id
join salary on salary.id = employee_salary.salary_id
group by role_name like '%QA_engineer%'; 

-- 25  Вывести количество QA инженеров

select  COUNT(monthly_salary)
from employees join roles_employee
on  employees.id = roles_employee.employee_id 
join roles on roles.id= roles_employee.role_id
join employee_salary on employee_salary.employee_id = roles_employee.employee_id
join salary on salary.id = employee_salary.salary_id
group by role_name like '%QA_engineer%'; 

-- 26 Вывести количество Middle специалистов.

select  COUNT (roles.id)
from employees join roles_employee
on  employees.id = roles_employee.employee_id 
join roles on roles.id= roles_employee.role_id
join employee_salary on employee_salary.employee_id = roles_employee.employee_id
join salary on salary.id = employee_salary.salary_id
group by role_name like 'Middle%'; 

-- 27 Вывести количество разработчиков

select  COUNT (roles.id)
from employees join roles_employee
on  employees.id = roles_employee.employee_id 
join roles on roles.id= roles_employee.role_id
join employee_salary on employee_salary.employee_id = roles_employee.employee_id
join salary on salary.id = employee_salary.salary_id
group by role_name like '%developer_%'; 

-- 28 Вывести фонд (сумму) зарплаты разработчиков.


select  SUM (monthly_salary)
from employees join roles_employee
on  employees.id = roles_employee.employee_id 
join roles on roles.id= roles_employee.role_id
join employee_salary on employee_salary.employee_id = roles_employee.employee_id
join salary on salary.id = employee_salary.salary_id
group by role_name like '%developer_%'; 

-- 29 Вывести имена, должности и ЗП всех специалистов по возрастанию

select  salary.id, employees.employee_name, employee_salary
from employees join roles_employee
on  employees.id = roles_employee.employee_id 
join roles on roles.id= roles_employee.role_id
join employee_salary on employee_salary.employee_id = roles_employee.employee_id
join salary on salary.id = employee_salary.salary_id; 

-- 30 Вывести имена, должности и ЗП всех специалистов 
--       по возрастанию у специалистов у которых ЗП от 1700 до 2300

select monthly_salary, employees.employee_name, employee_salary
from employees join roles_employee
on  employees.id = roles_employee.employee_id 
join roles on roles.id= roles_employee.role_id
join employee_salary on employee_salary.employee_id = roles_employee.employee_id
join salary on salary.id = employee_salary.salary_id; 
group by  salary.monthly_salary  =  1700 between 2300;

-- 31 Вывести имена, должности и ЗП всех специалистов 
--     по возрастанию у специалистов у которых ЗП меньше 2300

select monthly_salary, employees.employee_name, employee_salary
from employees join roles_employee
on  employees.id = roles_employee.employee_id 
join roles on roles.id= roles_employee.role_id
join employee_salary on employee_salary.employee_id = roles_employee.employee_id
join salary on salary.id = employee_salary.salary_id; 
where  salary.monthly_salary 
having >2300;

-- 32 Вывести имена, должности и ЗП всех специалистов
--      по возрастанию у специалистов у которых ЗП равна 1100, 1500, 2000

select monthly_salary, employees.employee_name, employee_salary
from employees join roles_employee
on  employees.id = roles_employee.employee_id 
join roles on roles.id= roles_employee.role_id
join employee_salary on employee_salary.employee_id = roles_employee.employee_id
join salary on salary.id = employee_salary.salary_id; 
group by  salary.monthly_salary =('1100');